/* eslint-disable no-template-curly-in-string */
export var submitHandler = {
  id: 'submit',
  triggerName: 'null',
  workflow: [
    { id: '1', type: 'start', next: { success: 'PBXkdcCRxxG7i' } },
    {
      id: 'PBXkdcCRxxG7i',
      type: 'js',
      next: { success: 'PBXuDrOiDQLfL' },
      nodename: 'JS code',
      code:
          'function(data,ui){\r\n\r\n// To check is import or duplicate or normal form insert/update\r\n debugger; data.form1=JSON.parse(JSON.stringify(data.form));  \r\ndata.type=(data.type=="import" || data.type=="duplicate")?1:0;\r\n\r\n// Get template params\r\ndata.template_params=props_from_params(ui.$route.params.template_params);\r\n\r\n// When form ac-form-preview is present in c-f then c-f reference is ui.$parent.$parent \r\nui.is_update?(ui.$parent.isUpdate=ui.is_update):\'\';\r\nui.$parent=(ui.$parent.isUpdate == undefined && data.type !=1)?ui.$parent.$parent:ui.$parent;\r\n\r\n// To check is update or insert\r\ndata.is_updateFor = ui.$parent.isUpdate;\r\n// To check is multi insert or not\r\ndata.is_multi_insert = ui.$parent.isMi ? 1 : ui.$parent.$parent.isMi ? 1 : 0;\r\n \r\n  try {\r\n        ui.$parent.formFields.buttons[0].disabled=true;\r\n          } catch (err) { }\r\n}',
    },
    { id: 'PBXygQLnEILf5', type: 'alert', next: { success: 'hangup' }, nodename: 'Alert', title: 'Failed', message: 'Failed Validation...!', variant: 'primary', duration: '6000' },
    { id: 'PBXcZF0M1aHMi', type: 'if_condition', next: { success: 'PBXleRinbbIgw', failure: 'PBXc5Sf5sff5w' }, nodename: 'If Condition', if_type: 'value', variable1: '{{{is_updateFor}}}', comparator: '==', variable2: '1' },
    {
      id: 'PBXleRinbbIgw',
      type: 'js',
      next: { success: 'PBXSckn9IKukA' },
      nodename: 'JS code hiding edit modal',
      code:
      "\r\n\r\n\r\nfunction(data, ui) {\r\n      \r\n  try {\r\n        data.form1 = (ui.$parent.before_put(data.form1, ui) || data.form1); \r\n    } catch (err) { }\r\n    data.putUrl = ui.putUrl ? ui.putUrl : ui.$parent.putUrl;\r\n\r\n   \r\n    /*if(data.form1 && data.form1.trigger){\r\n       data.form1['`trigger`'] = data.form1.trigger;\r\n       delete data.form1.trigger;\r\n    }\r\n    if(data.form1 && data.form1.condition){\r\n       data.form1['`condition`'] = data.form1.condition;\r\n       delete data.form1.condition;\r\n    }*/\r\n    data.obj = JSON.stringify(data.form1);\r\n    data.put_id = ui.$parent.block_params ? ui.$parent.block_params.id : data.form1.id;\r\n    try {\r\n        ui.$parent.$parent.$parent.hide();\r\n    } catch (err) { }\r\n  var formData={...data.form1} \r\n for (var key in formData) {\r\n        if (Array.isArray(formData[key])) {\r\n            formData[key] = JSON.stringify(formData[key]);\r\n        }\r\n        if (Number.isInteger(formData[key])) {\r\n            formData[key] = JSON.stringify(formData[key]);\r\n        }\r\n        if (typeof formData[key] == \"boolean\") {\r\n            formData[key] = formData[key] ? 1 : 0;\r\n        }\r\n       /* if (!data.form1[key]) {\r\n            delete data.form1[key];\r\n        }*/\r\n    }\r\n    data.is_multi_insert = data.putUrl.includes(\"v2/\") ? 0 : data.putUrl.includes('c/g') ? 0 : 1;\r\n    data.is_multi_insert = ui.isMultiInsert ? ui.isMultiInsert : data.is_multi_insert\r\n    formData = ui.dbArray ? ui.dbArray :formData;\r\n    data.obj = JSON.stringify(formData);\r\n    //data.put_id = ui.$parent.block_params.id;\r\n\r\n}",
    },
    {
      id: 'PBXCcKoC4w3GF',
      type: 'ajax',
      next: { failure: 'PBXS6Ut2q4yKN', success: 'PBXAqw78mrsRd' },
      nodename: 'Ajax',
      url: '{{#if putUrl}}{{{putUrl}}}{{/if}}',
      method: 'put',
      jsonp: 'false',
      data: '{{{form-encoded form1}}}',
      var: 'res',
      data_params: [{}],
      headers: [{ Accept: 'text/plain' }],
    },
    {
      id: 'PBXaXMcI0feip',
      type: 'js',
      next: { success: 'hangup' },
      nodename: 'JS code',
      code:
      'function(data, ui) {\r\n   try {\r\n      ui.$parent.formFields.buttons[0].disabled=false;\r\n ui.$parent.formFields.buttons=[...ui.$parent.formFields.buttons]; } catch (err) { }\r\n}',
    },
    {
      id: 'PBXCXiOUOvTTh',
      type: 'ajax',
      next: { failure: 'PBX9AReZlJGAa', success: 'PBXNs25OW31Wa' },
      nodename: 'Ajax',
      url: '{{#if postUrl}}{{{postUrl}}}{{/if}}',
      method: 'post',
      jsonp: 'false',
      data: '{{{obj}}}',
      var: 'res',
      data_params: [{}],
      headers: [{ 'Content-Type': 'application/json' }],
    },
    {
      id: 'PBXwoS7UGDK4x',
      type: 'js',
      next: { success: 'PBXCXiOUOvTTh' },
      nodename: 'JS code',
      code:
          "function(data, ui) {\r\n  try {\r\n    data.form1 = (ui.$parent.before_submit(data.form1, ui) || data.form1);\r\n  } catch (err) { }\r\n \r\n\r\n  data.postUrl = data.postUrl ? data.postUrl : ui.$parent.postUrl ? ui.$parent.postUrl : ui.$parent.$parent.postUrl ? ui.$parent.$parent.postUrl : ui.postUrl ? ui.postUrl : '';\r\n var formData = {...data.form1} \r\n for (var key in formData) {\r\n    if (Array.isArray(formData[key])) {\r\n      formData[key] = JSON.stringify(formData[key]);\r\n    }\r\n    if (Number.isInteger(formData[key])) {\r\n      formData[key] = JSON.stringify(formData[key]);\r\n    }\r\n    if (typeof formData[key] == \"boolean\") {\r\n      formData[key] = formData[key] ? 1 : 0;\r\n    }\r\n\r\n  }\r\n  /*  try {\r\n        if (formData && formData.trigger) {\r\n            formData['`trigger`'] = formData.trigger;\r\n            delete formData.trigger;\r\n        }\r\n        if (data.form1 && data.form1.condition) {\r\n            data.form1['`condition`'] = data.form1.condition;\r\n            delete data.form1.condition;\r\n        }\r\n    } catch (e) { }*/\r\n\r\n  data.is_multi_insert = data.postUrl.includes(\"v2/\") ? 0 : data.postUrl.includes('c/g') ? 0 : 1;\r\n    data.is_multi_insert = ui.isMultiInsert ? ui.isMultiInsert : data.is_multi_insert ;\r\n\r\n   formData = ui.dbArray ? ui.dbArray : formData;\r\n\r\n  var obj = data.is_multi_insert ? formData : { \"data\": Array.isArray(formData) ? formData : [formData] };\r\n  data.obj = JSON.stringify(obj);\r\n}",
    },
    {
      id: 'PBXEdqRyr9OFP',
      type: 'js',
      next: { success: 'hangup' },
      nodename: 'JS code',
      code:
          'function(data, ui) {\r\n\r\n    try {\r\n        if (ui.$refs["csvref"] || data.type == "import") {\r\n            // To close import field mapping modal\r\n            ui.$bvModal.hide(\'bv-modal-example\')\r\n        } else {\r\n            //To close appup form modal\r\n            (data.is_duplicate || data.template_params.gb == "t") ? \'\' : ui.$parent.$parent.$parent.hide();\r\n        }\r\n        // To append id to form object if it\'s import\r\n        if (Array.isArray(data.form1)) {\r\n            data.form1 = data.form1.map((item, index) => {\r\n                item.id = data.res.data[index].GENERATED_KEY;\r\n                return item;\r\n            });\r\n        } else {\r\n            if (data.res.data.message) {\r\n                var index = multi_insert_refresh[get_app()] ? multi_insert_refresh[get_app()][ui.$route.params.entity]["index"] : \'\';\r\n                var insertkey = multi_insert_refresh[get_app()] ? multi_insert_refresh[get_app()][ui.$route.params.entity]["key"] : \'\';\r\n                data.form1.id = data.res.data.message[index][insertkey].GENERATED_KEY ? data.res.data.message[index][insertkey].GENERATED_KEY : data.res.data.message[index][insertkey][0].GENERATED_KEY\r\n            }\r\n            else {\r\n                data.form1.id = data.res.data.GENERATED_KEY ? data.res.data.GENERATED_KEY : data.res.data[0].GENERATED_KEY;\r\n            }\r\n            data.form1 = [data.form1]\r\n        }\r\n        try {\r\n            data.form1 = ui.$parent.after_submit(data.form1, ui);\r\n        } catch (err) {}\r\n        data.url = ui.$parent.getUrl ? (`${ui.$parent.getUrl}?w=id=${data.form1[0].id}`) : (`${data.getUrl}?w=id=${data.form1[0].id}`);\r\n        data.template_params.gb == "t" ? ui.start("form_cancel") : ui.start("get_data_after_submit", { "submit_handler": data });\r\n        data.form1 = {}\r\n    } catch (err) { data.template_params.gb == "t" ? ui.start("form_cancel") : "";\r\n    }\r\n\r\n\r\n}',
    },
    { id: 'PBXuDrOiDQLfL', type: 'if_condition', next: { success: 'PBXgox2WWqU9m', failure: 'PBXcZF0M1aHMi' }, nodename: 'If Condition', if_type: 'value', variable1: '{{type}}', comparator: '==', variable2: '0' },
    { id: 'PBXSckn9IKukA', type: 'if_condition', next: { success: 'PBXHo5X9kkTyr', failure: 'PBXCcKoC4w3GF' }, nodename: 'If Condition', if_type: 'value', variable1: '{{{is_multi_insert}}}', comparator: '==', variable2: '1' },
    {
      id: 'PBXHo5X9kkTyr',
      type: 'ajax',
      next: { failure: 'PBXS6Ut2q4yKN', success: 'PBXAqw78mrsRd' },
      nodename: 'Ajax',
      url: '{{#if putUrl}}{{{putUrl}}}{{/if}}',
      method: 'put',
      jsonp: 'false',
      data: '{{{obj}}}',
      var: 'res',
      data_params: [{}],
      headers: [{ 'Content-Type': 'application/json' }],
    },
    { id: 'PBXgox2WWqU9m', type: 'validate', next: { success: 'PBXcZF0M1aHMi', failure: 'PBXw2qeIqO0C7' }, nodename: 'Validate', form_id: '' },
    {
      id: 'PBXc5Sf5sff5w',
      type: 'js',
      next: { success: 'PBXqzVCnWBXmp' },
      nodename: 'api_key',
      code:
          'function(data, ui) {\r\n   /* It is for site recording app for websites table*/\r\n    //data.form1.api_key \r\n    if ((ui.$route.params.entity == "websites" || ui.$route.params.entity == "app_lists" || ui.$route.params.entity == "department_details") && (ui.$route.params.appname== "siterecording" || ui.$route.params.appname== "push" || ui.$route.params.appname== "visitortracker" || ui.$route.params.appname== "usertracker" || ui.$route.params.appname== "clickdesk")) {\r\n        \r\n        if (ui.$route.params.appname == "siterecording" || ui.$route.params.appname == "visitortracker") {\r\n            var dt = new Date().getTime();\r\n             data.workflow_generated_key=0;\r\n            data.form1.api_key = \'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\r\n                var r = (dt + Math.random() * 16) % 16 | 0;\r\n                dt = Math.floor(dt / 16);\r\n                return (c == \'x\' ? r : (r & 0x3 | 0x8)).toString(16);\r\n            });\r\n        } else if(ui.$route.params.appname == "usertracker"){\r\n             data.workflow_generated_key=1;\r\n        }else {\r\n            data.form1.api_key = JSON.stringify(Math.floor(Math.random() * Math.floor(9999999999999999)));\r\n            data.workflow_generated_key=0;\r\n        }\r\n    }\r\n}',
    },
    { id: 'PBXNs25OW31Wa', type: 'alert', next: { success: 'PBXTyE13ZkA26' }, nodename: 'Alert insert success', title: 'Success', message: 'Inserted Successfully' },
    { id: 'PBXAqw78mrsRd', type: 'alert', next: { success: 'PBX1TyIZ5EmMB' }, nodename: 'Alert Updated successfully', title: 'Success', message: 'Updated Successfully' },
    { id: 'PBXS6Ut2q4yKN', type: 'alert', next: { success: 'hangup' }, nodename: 'Alert Falied to Update', title: 'Failed', message: 'Failed to Update' },
    { id: 'PBX9AReZlJGAa', type: 'alert', next: { success: 'hangup' }, nodename: 'Alert Failed to Insert', title: 'Failed', message: 'Failed to Insert' },
    { id: 'PBXqzVCnWBXmp', type: 'if_condition', next: { success: 'PBXeXFxLefPvD', failure: 'PBXwoS7UGDK4x' }, nodename: 'If Condition', if_type: 'value', variable1: '{{{workflow_generated_key}}}', comparator: '==', variable2: '1' },
    {
      id: 'PBXeXFxLefPvD',
      type: 'ajax',
      next: { failure: 'hangup', success: 'PBXgxATM1XR4C' },
      nodename: 'Ajax',
      url: 'g/apikey',
      method: 'get',
      jsonp: 'false',
      data: ' ',
      var: 'api_key',
      data_params: [{ name: 'value' }],
      headers: [{ Accept: 'text/plain' }],
    },
    { id: 'PBXgxATM1XR4C', type: 'js', next: { success: 'PBXwoS7UGDK4x' }, nodename: 'JS code', code: 'function(data,ui){\r\ndata.form1["api_key"]=data.api_key.data;\r\nreturn data;\r\n}' },
    { id: 'PBX6TieAmf4dN', type: 'js', next: { success: 'PBXygQLnEILf5' }, nodename: 'JS code', code: 'function(data,ui){}' },
    {
      id: 'PBX1TyIZ5EmMB',
      type: 'js',
      next: { success: 'hangup' },
      nodename: 'JS code',
      code:
      '\r\n\r\nfunction(data, ui) {\r\n\ttry {\r\n\t\tdata.form1 = (ui.$parent.after_put(data.form1, ui) || data.form1);\r\n\t} catch (err) { }\r\n\ttry {\r\n\t\tif (data.res.data.message) {\r\n var entity=ui.$parent.entity?ui.$parent.entity:ui.$route.params.entity;\r\n\t\t\tvar index = multi_insert_refresh[get_app()] ? multi_insert_refresh[get_app()][entity][\'put\']["index"] : \'\';\r\n\t\t\tvar insertkey = multi_insert_refresh[get_app()] ? multi_insert_refresh[get_app()][entity][\'put\']["key"] : \'\';\r\n\t\t\tif (typeof (data.res.data.message[index][insertkey]) == \'string\') {\r\n\t\t\t\tdata.res.data.message[index][insertkey] = JSON.parse(data.res.data.message[index][insertkey]);\r\n\t\t\t}\r\n\r\n\t\t\tdata.put_id = data.res.data.message[index][insertkey].GENERATED_KEY ? data.res.data.message[index][insertkey].GENERATED_KEY : data.res.data.message[index][insertkey][0].GENERATED_KEY\r\n\t\t}\r\n\r\n\t} catch (err) {}\r\n\ttry{\r\n\t var whereKey=ui.$parent.whereKey?ui.$parent.whereKey:"id";\r\n\t\tvar getUrl=ui.$parent.getUrl?ui.$parent.getUrl:data.getUrl;\r\ndata.url=getUrl.includes(\'?\')?(`${getUrl}&w=${whereKey}=${data.put_id}`):(`${getUrl}?w=${whereKey}=${data.put_id}`) \r\n\t\tdata.template_params.gb == "t" ? ui.start("form_cancel") : ui.start("get_data_after_submit", {\r\n\t\t\t"submit_handler": data\r\n\t\t});\r\n\t} catch (err) {}\r\n\r\n\ttry {\r\n\t\t//hiding upate confirmation modal\r\n\t\twindow.AppupModalInstance.$refs.ref1.hide();\r\n\r\n\r\n\t} catch (err) { }\r\n\ttry {\r\n\t\t// data.form1.notes = "";\r\n\t\t//     data.form1.title = "";\r\n\t\tif (ui.$parent.$parent.$parent.getNoteData && typeof (ui.$parent.$parent.$parent.getNoteData) === \'function\') {\r\n\t\t\tui.$parent.hideModal();\r\n\t\t\tui.$parent.$parent.$parent.getNoteData()\r\n\t\t}\r\n\t\tif (ui.$parent && ui.$parent.docSlideOut) {\r\n\r\n\t\t\tui.$parent.hideModal();\r\n\t\t\tui.$parent.$parent.$parent.gaetItemData();\r\n\t\t}\r\n\r\n\t} catch (err) {}\r\n\r\n}',
    },
    {
      id: 'PBXTyE13ZkA26',
      type: 'js',
      next: { success: 'hangup' },
      nodename: 'JS code',
      code:
          'function(data, ui) {\r\n\r\n    try {\r\n        if (ui.$refs["csvref"] || data.type == "import") {\r\n            // To close import field mapping modal\r\n            ui.$bvModal.hide(\'bv-modal-example\')\r\n        } else {\r\n            try{\r\n            //To close appup form modal\r\n            (data.is_duplicate || data.template_params.gb == "t") ? \'\' : ui.$parent.$parent.$parent.hide();\r\n       }catch(e){}\r\n\r\n        }\r\n        // To append id to form object if it\'s import\r\n        if (Array.isArray(data.form1)) {\r\n            data.form1 = data.form1.map((item, index) => {\r\n                item.id = data.res.data[index].GENERATED_KEY;\r\n                return item;\r\n            });\r\n        } else {\r\n            if (data.res.data.message) {\r\n        var entity=ui.$parent.entity?ui.$parent.entity:ui.$route.params.entity;\r\n        var index = multi_insert_refresh[get_app()] ? multi_insert_refresh[get_app()][entity][\'post\']["index"] : \'\';\r\n                var insertkey = multi_insert_refresh[get_app()] ? multi_insert_refresh[get_app()][entity][\'post\']["key"] : \'\';\r\n                data.form1.id = data.res.data.message[index][insertkey].GENERATED_KEY ? data.res.data.message[index][insertkey].GENERATED_KEY : data.res.data.message[index][insertkey][0].GENERATED_KEY\r\n            }\r\n            else {\r\n                data.form1.id = data.res.data.GENERATED_KEY ? data.res.data.GENERATED_KEY : data.res.data[0].GENERATED_KEY;\r\n            }\r\n            data.form1 = [data.form1]\r\n        }\r\n      \r\n        var whereKey=ui.$parent.whereKey?ui.$parent.whereKey:"id";\r\n       var getUrl=ui.$parent.getUrl?ui.$parent.getUrl:data.getUrl\r\ndata.url=getUrl.includes(\'?\')?(`${getUrl}&w=${whereKey}=${data.form1[0].id}`):(`${getUrl}?w=${whereKey}=${data.form1[0].id}`);\r\nif(data.template_params.adb && data.url.includes(data.template_params.adb)){\r\n\r\n}\r\n else{\r\n        data.template_params.gb == "t" ? ui.start("form_cancel") : ui.start("get_data_after_submit", { "submit_handler": data });\r\n        }\r\ndata.form1 = {}\r\n    } catch (err) {\r\n\r\n        data.template_params.gb == "t" ? ui.start("form_cancel") : "";\r\n    }\r\n    try {\r\n   ui["dataRef"]=data;\r\n     data.form1 = (ui.$parent.after_submit(data.form1, ui) || data.form1);\r\n    } catch (err) {}\r\n    try {\r\n        if (ui.$parent && ui.$parent.slideOut) {\r\n            data.form1.notes = "";\r\n            data.form1.title = "";\r\n            if (ui.$parent.$parent.$parent.getNoteData && typeof (ui.$parent.$parent.$parent.getNoteData) === \'function\') {\r\n                ui.$parent.hideModal();\r\n                ui.$parent.$parent.$parent.getNoteData()\r\n            }\r\n        }\r\n        if (ui.$parent && ui.$parent.docSlideOut) {\r\n\r\n            ui.$parent.hideModal();\r\n            ui.$parent.$parent.$parent.gaetItemData();\r\n\r\n        }\r\n    } catch (exp) {}\r\n\r\n\r\n}',
    },
    { id: 'PBXw2qeIqO0C7', type: 'alert', next: { success: 'hangup' }, nodename: 'Alert', title: '', message: 'Please fill required fields', variant: 'warning', duration: '4000' },
  ],
};
